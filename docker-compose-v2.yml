services:
  mongodb:
    image: mongo:${MONGO_VERSION:-7.0}
    container_name: ${MONGO_CONTAINER_NAME:-mongodb}
    ports:
      - '${MONGO_PORT:-27017}:27017'
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USER:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_DB:-appdb}
    networks:
      - backend
    volumes:
      - mongo_data:/data/db
      - mongo_config:/data/configdb
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  mssql:
    image: mcr.microsoft.com/mssql/server:${MSSQL_VERSION:-2022-latest}
    container_name: ${MSSQL_CONTAINER_NAME:-mssql}
    ports:
      - '${MSSQL_PORT:-1433}:1433'
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=${MSSQL_SA_PASSWORD}
      - MSSQL_PID=${MSSQL_PID:-Express}
    networks:
      - backend
    volumes:
      - mssql_data:/var/opt/mssql/data
      - mssql_log:/var/opt/mssql/log
      - mssql_backup:/var/opt/mssql/backup
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P $${SA_PASSWORD} -Q 'SELECT 1' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  redis:
    image: redis:${REDIS_VERSION:-7-alpine}
    container_name: ${REDIS_CONTAINER_NAME:-redis}
    ports:
      - '${REDIS_PORT:-6379}:6379'
    command: >
      redis-server
      --requirepass ${REDIS_PASSWORD}
      --appendonly yes
      --appendfsync everysec
      --maxmemory ${REDIS_MAX_MEMORY:-256mb}
      --maxmemory-policy allkeys-lru
    networks:
      - backend
    volumes:
      - redis_data:/data
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.25'
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  rabbitmq:
    image: rabbitmq:${RABBITMQ_VERSION:-3.12-management-alpine}
    container_name: ${RABBITMQ_CONTAINER_NAME:-rabbitmq}
    hostname: ${RABBITMQ_HOSTNAME:-rabbitmq}
    ports:
      - '${RABBITMQ_MANAGEMENT_PORT:-15672}:15672'
      - '${RABBITMQ_PORT:-5672}:5672'
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER:-admin}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
      - RABBITMQ_DEFAULT_VHOST=${RABBITMQ_VHOST:-/}
      - RABBITMQ_ERLANG_COOKIE=${RABBITMQ_ERLANG_COOKIE:-unique_erlang_cookie}
    networks:
      - backend
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - rabbitmq_logs:/var/log/rabbitmq
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  seq:
    image: datalust/seq:${SEQ_VERSION:-2024.1}
    container_name: ${SEQ_CONTAINER_NAME:-seq}
    ports:
      - '${SEQ_PORT:-1458}:80'
    environment:
      - ACCEPT_EULA=Y
      - SEQ_FIRSTRUN_ADMINPASSWORDHASH=${SEQ_ADMIN_PASSWORD_HASH}
      - SEQ_CACHE_SYSTEMRAMTARGET=${SEQ_RAM_TARGET:-0.9}
    networks:
      - backend
    volumes:
      - seq_data:/data
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/api"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  mongo_data:
    driver: local
  mongo_config:
    driver: local
  mssql_data:
    driver: local
  mssql_log:
    driver: local
  mssql_backup:
    driver: local
  redis_data:
    driver: local
  rabbitmq_data:
    driver: local
  rabbitmq_logs:
    driver: local
  seq_data:
    driver: local

networks:
  backend:
    name: ${NETWORK_NAME:-app-backend}
    driver: bridge
